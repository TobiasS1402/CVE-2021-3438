function Set-FixVulnerablePrinter
{
    <#
        .SYNOPSIS
        Detects and fixes printerdrivers vulnerable to CVE-2021-3438.
        Author:
            Tobias, 28-07-2021

        .DESCRIPTION
        Detects printerdrivers vulnerable to CVE-2021-3438.
        Loops through the printerdrivers, installs the fix if necessary.

        .PARAMETER Name
        CVE-2021-3438_remediation

        .EXAMPLE
        PS> import-module CVE-2021-3438_remediation.ps1

        .EXAMPLE
        PS> Set-FixVulnerablePrinter

        .LINK
        Versions based on https://support.hp.com/us-en/document/ish_3900395-3833905-16/hpsbpi03724 and https://securitydocs.business.xerox.com/wp-content/uploads/2021/05/cert_Security_Mini_Bulletin_XRX21K_for_B2XX_PH30xx_3260_3320_WC3025_32xx_33xx.pdf

    #>
    try{
        $printerDriver = Get-PrinterDriver -ErrorAction Stop
        
        $ManuFacturer = $printerDriver | Select-Object Name, Manufacturer | Where-Object {(
            $_.Manufacturer -Match "Samsung" -or
            $_.Manufacturer -Match "HP" -or
            $_.Manufacturer -Match "Xerox" -or
            $_.Manufacturer -Match "Hawlett" -or
            $_.Manufacturer -Match "Phaser" -or
            $_.Manufacturer -Match "WorkCentre")}
        
        if ((Test-Path HKLM:\SOFTWARE\AsterICT) -eq $False) {
            Write-Host "AsterICT registry does not exist"
            New-Item -Path "HKLM:\SOFTWARE" -Name AsterICT
        }
        else {
            Write-Host "AsterICT registry does exist"
        }        

        if ($ManuFacturer.Count -eq 0) {
            Write-Host -ForegroundColor Green "No printers from vulnerable vendors have been found, stopping script..."
            Set-ItemProperty -Path HKLM:\SOFTWARE\AsterICT -Name "CVE-2021-3438" -Value "No vulnerable manufacturers found"
            Break
        }
        else {
            Write-Host -ForegroundColor Red $ManuFacturer.Count "possible vulnerable printer drivers have been found, checking models!"
        }

        $XeroxDriverModels = $ManuFacturer | Select-Object * | Where-Object {(
            $_.Name -Match "B205" -or
            $_.Name -Match "B210" -or
            $_.Name -Match "B215" -or
            $_.Name -Match "3020" -or
            $_.Name -Match "3052" -or
            $_.Name -Match "3260" -or
            $_.Name -Match "3320" -or
            $_.Name -Match "3025" -or
            $_.Name -Match "3215" -or
            $_.Name -Match "3225" -or
            $_.Name -Match "3315" -or
            $_.Name -Match "3325")}
        
        
        $HPDriverModels = $ManuFacturer | Select-Object * | Where-Object {(
            $_.Name -Match "color laser 150" -or
            $_.Name -Match "color laser MFP" -or
            $_.Name -Match "HP Laser 10" -or
            $_.Name -Match "HP Laser 408" -or
            $_.Name -Match "HP Laser MFP 13" -or
            $_.Name -Match "MFP 432" -or
            $_.Name -Match "Laserjet MFP 42" -or
            $_.Name -Match "Laserjet MFP M43" -or
            $_.Name -Match "Laserjet MFP M44" -or
            $_.Name -Match "Laserjet MFP M726" -or
            $_.Name -Match "Laserjet MFP M726")}

        $SamsungDriverModels = $ManuFacturer | Select-Object * | Where-Object {(
            $_.Name -Match "CLP" -or
            $_.Name -Match "CLX" -or
            $_.Name -Match "SCX" -or
            $_.Name -Match "SL-K" -or
            $_.Name -Match "SL-X" -or
            $_.Name -Match "SL-M" -or
            $_.Name -Match "SL-C" -or
            $_.Name -Match "ML-3750" -or
            $_.Name -Match "ML-451" -or
            $_.Name -Match "ML-501" -or
            $_.Name -Match "ML-551" -or
            $_.Name -Match "ML-651")}


            if ($HPDriverModels.Count -gt 0) {
                Start-Process -FilePath HP-Samsung.exe -ArgumentList "/S" -Wait
                Write-Host -ForegroundColor Yellow "HP patch has been installed, proceeding..."
                Set-ItemProperty -Path HKLM:\SOFTWARE\AsterICT -Name "CVE-2021-3438.HP" -Value "HP patch installed"
            }
            else{
                Write-Host -ForegroundColor Green "No potential vulnerable HP drivers have been found, proceeding..."
                Set-ItemProperty -Path HKLM:\SOFTWARE\AsterICT -Name "CVE-2021-3438.HP" -Value "HP patch not installed" 
            }

            if ($XeroxDriverModels.Count -gt 0) {
                Start-Process -FilePath Xerox.exe -ArgumentList "/S" -Wait
                Write-Host -ForegroundColor Yellow "Xerox patch has been installed, proceeding..."
                Set-ItemProperty -Path HKLM:\SOFTWARE\AsterICT -Name "CVE-2021-3438.Xerox" -Value "Xerox patch installed" 
            }
            else{
                Write-Host -ForegroundColor Green "No potential vulnerable Xerox drivers have been found, proceeding..."
                Set-ItemProperty -Path HKLM:\SOFTWARE\AsterICT -Name "CVE-2021-3438.Xerox" -Value "Xerox patch not installed" 
            }

            if ($SamsungDriverModels.Count -gt 0) {
                Start-Process -FilePath HP-Samsung.exe -ArgumentList "/S" -Wait
                Write-Host -ForegroundColor Yellow "Samsung patch has been installed, proceeding..."
                Set-ItemProperty -Path HKLM:\SOFTWARE\AsterICT -Name "CVE-2021-3438.Samsung" -Value "Samsung patch installed"
            }
            else{
                Write-Host -ForegroundColor Green "No potential vulnerable Samsung drivers have been found, stopping script..."
                Set-ItemProperty -Path HKLM:\SOFTWARE\AsterICT -Name "CVE-2021-3438.Samsung" -Value "Samsung patch not installed" 
            }
        }
    catch{
        Write-Host -ForegroundColor Yellow "The spooler service is not reachable"
    }  
    Write-Host "Script finished with" $SamsungDriverModels.Count "Samsung Drivers" $HPDriverModels.Count "HP Drivers and" $XeroxDriverModels.Count "Xerox drivers patched"
    Set-ItemProperty -Path HKLM:\SOFTWARE\AsterICT -Name "CVE-2021-3438" -Value "Vulnerabilities have been remediated."
}
Set-FixVulnerablePrinter